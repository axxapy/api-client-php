<?php
/**
 * FlagsApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * LaunchDarkly REST API
 *
 * Build custom integrations with the LaunchDarkly REST API
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@launchdarkly.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Swagger\Client;

use \Swagger\Client\Configuration;
use \Swagger\Client\ApiClient;
use \Swagger\Client\ApiException;
use \Swagger\Client\ObjectSerializer;

/**
 * FlagsApiTest Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class FlagsApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for deleteFeatureFlag
     *
     * Delete a feature flag by ID.
     *
     */
    public function testDeleteFeatureFlag()
    {
    }

    /**
     * Test case for getFeatureFlag
     *
     * Get a single feature flag by key..
     *
     */
    public function testGetFeatureFlag()
    {
    }

    /**
     * Test case for getFeatureFlagStatus
     *
     * Get a list of statuses for all feature flags.
     *
     */
    public function testGetFeatureFlagStatus()
    {
    }

    /**
     * Test case for getFeatureFlagStatuses
     *
     * Get a list of statuses for all feature flags.
     *
     */
    public function testGetFeatureFlagStatuses()
    {
    }

    /**
     * Test case for getFeatureFlags
     *
     * Get a list of all features in the given project..
     *
     */
    public function testGetFeatureFlags()
    {
    }

    /**
     * Test case for patchFeatureFlag
     *
     * Modify a feature flag by ID.
     *
     */
    public function testPatchFeatureFlag()
    {
    }

    /**
     * Test case for postFeatureFlag
     *
     * Creates a new feature flag..
     *
     */
    public function testPostFeatureFlag()
    {
    }
}
